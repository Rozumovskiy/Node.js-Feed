{"ast":null,"code":"import _classCallCheck from \"/home/bogdan/Documents/Node Js/React + node restapi/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bogdan/Documents/Node Js/React + node restapi/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bogdan/Documents/Node Js/React + node restapi/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bogdan/Documents/Node Js/React + node restapi/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bogdan/Documents/Node Js/React + node restapi/React/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bogdan/Documents/Node Js/React + node restapi/React/src/pages/Feed/SinglePost/SinglePost.js\";\nimport React, { Component } from \"react\";\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nvar SinglePost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SinglePost, _Component);\n\n  function SinglePost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SinglePost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SinglePost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: \"\",\n      author: \"\",\n      date: \"\",\n      image: \"\",\n      content: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SinglePost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var postId = this.props.match.params.postId;\n      var graphqlQuery = {\n        query: \"query FetchSinglePost($postId: ID!){\\n          post(id: $postId) {\\n            title\\n            content\\n            imageUrl\\n            creator {\\n              name\\n            }\\n            createdAt\\n          }\\n        }\\n      \",\n        veriables: {\n          postId: postId\n        }\n      };\n      fetch(\"http://localhost:8080/graphql\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error(\"Fetching post failed!\");\n        }\n\n        _this2.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: \"http://localhost:8080/\" + resData.data.post.imageUrl,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString(\"en-US\"),\n          content: resData.data.post.content\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        className: \"single-post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Created by \", this.state.author, \" on \", this.state.date), React.createElement(\"div\", {\n        className: \"single-post__image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Image, {\n        contain: true,\n        imageUrl: this.state.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.content));\n    }\n  }]);\n\n  return SinglePost;\n}(Component);\n\nexport default SinglePost;","map":{"version":3,"sources":["/home/bogdan/Documents/Node Js/React + node restapi/React/src/pages/Feed/SinglePost/SinglePost.js"],"names":["React","Component","Image","SinglePost","state","title","author","date","image","content","postId","props","match","params","graphqlQuery","query","veriables","fetch","method","headers","Authorization","token","body","JSON","stringify","then","res","json","resData","errors","Error","setState","data","post","creator","name","imageUrl","Date","createdAt","toLocaleDateString","catch","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,kBAAP;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,OAAO,EAAE;AALH,K;;;;;;wCAQY;AAAA;;AAClB,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACA,UAAMI,YAAY,GAAG;AACnBC,QAAAA,KAAK,sPADc;AAanBC,QAAAA,SAAS,EAAE;AACTN,UAAAA,MAAM,EAAEA;AADC;AAbQ,OAArB;AAiBAO,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKT,KAAL,CAAWU,KAD/B;AAEP,0BAAgB;AAFT,SAF4B;AAMrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,YAAf;AAN+B,OAAlC,CAAL,CAQGW,IARH,CAQQ,UAAAC,GAAG,EAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAVH,EAWGF,IAXH,CAWQ,UAAAG,OAAO,EAAI;AACf,YAAIA,OAAO,CAACC,MAAZ,EAAoB;AAClB,gBAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AACD,QAAA,MAAI,CAACC,QAAL,CAAc;AACZ1B,UAAAA,KAAK,EAAEuB,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkB5B,KADb;AAEZC,UAAAA,MAAM,EAAEsB,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBC,OAAlB,CAA0BC,IAFtB;AAGZ3B,UAAAA,KAAK,EAAE,2BAA2BoB,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBG,QAHxC;AAIZ7B,UAAAA,IAAI,EAAE,IAAI8B,IAAJ,CAAST,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBK,SAA3B,EAAsCC,kBAAtC,CACJ,OADI,CAJM;AAOZ9B,UAAAA,OAAO,EAAEmB,OAAO,CAACI,IAAR,CAAaC,IAAb,CAAkBxB;AAPf,SAAd;AASD,OAxBH,EAyBG+B,KAzBH,CAyBS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OA3BH;AA4BD;;;6BAEQ;AACP,aACE;AAAS,QAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKrC,KAAL,CAAWC,KAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACc,KAAKD,KAAL,CAAWE,MADzB,UACqC,KAAKF,KAAL,CAAWG,IADhD,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKJ,KAAL,CAAWK,OAAf,CARF,CADF;AAYD;;;;EAvEsBR,S;;AA0EzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nclass SinglePost extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    date: \"\",\n    image: \"\",\n    content: \"\"\n  };\n\n  componentDidMount() {\n    const postId = this.props.match.params.postId;\n    const graphqlQuery = {\n      query: `query FetchSinglePost($postId: ID!){\n          post(id: $postId) {\n            title\n            content\n            imageUrl\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `,\n      veriables: {\n        postId: postId\n      }\n    };\n    fetch(\"http://localhost:8080/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors) {\n          throw new Error(\"Fetching post failed!\");\n        }\n        this.setState({\n          title: resData.data.post.title,\n          author: resData.data.post.creator.name,\n          image: \"http://localhost:8080/\" + resData.data.post.imageUrl,\n          date: new Date(resData.data.post.createdAt).toLocaleDateString(\n            \"en-US\"\n          ),\n          content: resData.data.post.content\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n"]},"metadata":{},"sourceType":"module"}